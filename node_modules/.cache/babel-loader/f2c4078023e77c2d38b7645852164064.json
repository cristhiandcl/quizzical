{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _toConsumableArray from\"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _asyncToGenerator from\"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from\"react\";import\"./App.css\";import Start from\"./Start\";import Question from\"./Question\";import Bubbles from\"./Bubbles\";import{nanoid}from\"nanoid\";import Answers from\"./Answers\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){console.log(\"rendered\");var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),startGame=_React$useState2[0],setStartGame=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),quiz=_React$useState4[0],setQuiz=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),answered=_React$useState6[0],setAnswer=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),reStart=_React$useState8[0],setReStart=_React$useState8[1];React.useEffect(function(){setReStart(false);function getQuiz(){return _getQuiz.apply(this,arguments);}function _getQuiz(){_getQuiz=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://opentdb.com/api.php?amount=8\");case 2:res=_context.sent;_context.next=5;return res.json();case 5:data=_context.sent;setQuiz(data.results.map(function(question){var answer=[].concat(_toConsumableArray(question.incorrect_answers),[question.correct_answer]);answer.sort();return{question:question.question.replace(/&quot;/g,'\"').replace(/&#039;/g,\"'\"),answer:answer.map(function(answer){return{value:answer.replace(/&quot;/g,'\"').replace(/&#039;/g,'\"'),id:nanoid(),isHeld:false,triggered:false};}),correctAnswer:question.correct_answer};}));case 7:case\"end\":return _context.stop();}}},_callee);}));return _getQuiz.apply(this,arguments);}getQuiz();},[reStart]);function startQuiz(){setStartGame(function(prevStartGame){return!prevStartGame;});}function holdAnswer(id){if(!answered){setQuiz(quiz.map(function(question){return{question:question.question,answer:question.answer.map(function(answer){return answer.id===id?_objectSpread(_objectSpread({},answer),{},{isHeld:!answer.isHeld}):answer;}),correctAnswer:question.correctAnswer};}));}}function checkAnswers(){setAnswer(true);var count=0;setQuiz(quiz.map(function(question){return{question:question.question,answer:question.answer.map(function(answer){answer.isHeld&&answer.value===question.correctAnswer?count++:count=count;return answer.isHeld&&answer.value===question.correctAnswer?_objectSpread(_objectSpread({},answer),{},{triggered:true}):_objectSpread(_objectSpread({},answer),{},{triggered:true});}),correctAnswer:question.correctAnswer,totalCorrect:count};}));if(answered){setAnswer(false);setReStart(true);}}var allQuestions=quiz.map(function(question){return/*#__PURE__*/_jsxs(\"div\",{className:\"board\",children:[/*#__PURE__*/_jsx(Question,{question:question.question}),/*#__PURE__*/_jsx(\"div\",{className:\"answers-container\",children:question.answer.map(function(answer){return/*#__PURE__*/_jsx(Answers,{triggered:answer.triggered,correct:question.correctAnswer,isHeld:answer.isHeld,answer:answer.value,hold:function hold(){return holdAnswer(answer.id);}},answer.id);})})]},nanoid());});console.log(quiz);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[!startGame?/*#__PURE__*/_jsx(Start,{startQuiz:startQuiz}):/*#__PURE__*/_jsx(\"div\",{className:\"fullBoard\",children:allQuestions}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-play\",children:[answered&&/*#__PURE__*/_jsxs(\"h3\",{children:[\"You score \",quiz[quiz.length-1].totalCorrect,\"/\",quiz.length,\" correct answers\"]}),startGame&&/*#__PURE__*/_jsx(\"button\",{className:\"check-answers\",onClick:checkAnswers,children:answered?\"Play again\":\"Check answers\"})]}),/*#__PURE__*/_jsx(Bubbles,{})]});}export default App;","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/App.js"],"names":["React","Start","Question","Bubbles","nanoid","Answers","App","console","log","useState","startGame","setStartGame","quiz","setQuiz","answered","setAnswer","reStart","setReStart","useEffect","getQuiz","fetch","res","json","data","results","map","question","answer","incorrect_answers","correct_answer","sort","replace","value","id","isHeld","triggered","correctAnswer","startQuiz","prevStartGame","holdAnswer","checkAnswers","count","totalCorrect","allQuestions","length"],"mappings":"y3BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACbC,OAAO,CAACC,GAAR,CAAY,UAAZ,EACA,oBAAkCR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAlC,oDAAOC,SAAP,qBAAkBC,YAAlB,qBACA,qBAAwBX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB,qDAAOG,IAAP,qBAAaC,OAAb,qBACA,qBAA8Bb,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B,qDAAOK,QAAP,qBAAiBC,SAAjB,qBACA,qBAA8Bf,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B,qDAAOO,OAAP,qBAAgBC,UAAhB,qBAEAjB,KAAK,CAACkB,SAAN,CAAgB,UAAM,CACpBD,UAAU,CAAC,KAAD,CAAV,CADoB,QAELE,CAAAA,OAFK,+HAEpB,sKACoBC,CAAAA,KAAK,CAAC,sCAAD,CADzB,QACQC,GADR,qCAEqBA,CAAAA,GAAG,CAACC,IAAJ,EAFrB,QAEQC,IAFR,eAGEV,OAAO,CACLU,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,SAACC,QAAD,CAAc,CAC7B,GAAIC,CAAAA,MAAM,8BAAOD,QAAQ,CAACE,iBAAhB,GAAmCF,QAAQ,CAACG,cAA5C,EAAV,CACAF,MAAM,CAACG,IAAP,GACA,MAAO,CACLJ,QAAQ,CAAEA,QAAQ,CAACA,QAAT,CACPK,OADO,CACC,SADD,CACY,GADZ,EAEPA,OAFO,CAEC,SAFD,CAEY,GAFZ,CADL,CAILJ,MAAM,CAAEA,MAAM,CAACF,GAAP,CAAW,SAACE,MAAD,CAAY,CAC7B,MAAO,CACLK,KAAK,CAAEL,MAAM,CAACI,OAAP,CAAe,SAAf,CAA0B,GAA1B,EAA+BA,OAA/B,CAAuC,SAAvC,CAAkD,GAAlD,CADF,CAELE,EAAE,CAAE7B,MAAM,EAFL,CAGL8B,MAAM,CAAE,KAHH,CAILC,SAAS,CAAE,KAJN,CAAP,CAMD,CAPO,CAJH,CAYLC,aAAa,CAAEV,QAAQ,CAACG,cAZnB,CAAP,CAcD,CAjBD,CADK,CAAP,CAHF,sDAFoB,0CA0BpBV,OAAO,GACR,CA3BD,CA2BG,CAACH,OAAD,CA3BH,EA6BA,QAASqB,CAAAA,SAAT,EAAqB,CACnB1B,YAAY,CAAC,SAAC2B,aAAD,QAAmB,CAACA,aAApB,EAAD,CAAZ,CACD,CAED,QAASC,CAAAA,UAAT,CAAoBN,EAApB,CAAwB,CACxB,GAAI,CAACnB,QAAL,CAAe,CACXD,OAAO,CACLD,IAAI,CAACa,GAAL,CAAS,SAACC,QAAD,CAAc,CACrB,MAAO,CACLA,QAAQ,CAAEA,QAAQ,CAACA,QADd,CAELC,MAAM,CAAED,QAAQ,CAACC,MAAT,CAAgBF,GAAhB,CAAoB,SAACE,MAAD,CAAY,CACtC,MAAOA,CAAAA,MAAM,CAACM,EAAP,GAAcA,EAAd,gCACEN,MADF,MACUO,MAAM,CAAE,CAACP,MAAM,CAACO,MAD1B,GAEHP,MAFJ,CAGD,CAJO,CAFH,CAOLS,aAAa,CAAEV,QAAQ,CAACU,aAPnB,CAAP,CASD,CAVD,CADK,CAAP,CAYG,CACN,CAED,QAASI,CAAAA,YAAT,EAAwB,CACtBzB,SAAS,CAAC,IAAD,CAAT,CACA,GAAI0B,CAAAA,KAAK,CAAG,CAAZ,CACA5B,OAAO,CACLD,IAAI,CAACa,GAAL,CAAS,SAACC,QAAD,CAAc,CACrB,MAAO,CACLA,QAAQ,CAAEA,QAAQ,CAACA,QADd,CAELC,MAAM,CAAED,QAAQ,CAACC,MAAT,CAAgBF,GAAhB,CAAoB,SAACE,MAAD,CAAY,CACtCA,MAAM,CAACO,MAAP,EAAiBP,MAAM,CAACK,KAAP,GAAiBN,QAAQ,CAACU,aAA3C,CACIK,KAAK,EADT,CAEKA,KAAK,CAAGA,KAFb,CAGA,MAAOd,CAAAA,MAAM,CAACO,MAAP,EAAiBP,MAAM,CAACK,KAAP,GAAiBN,QAAQ,CAACU,aAA3C,gCACET,MADF,MACUQ,SAAS,CAAE,IADrB,kCAEER,MAFF,MAEUQ,SAAS,CAAE,IAFrB,EAAP,CAGD,CAPO,CAFH,CAULC,aAAa,CAAEV,QAAQ,CAACU,aAVnB,CAWLM,YAAY,CAAED,KAXT,CAAP,CAaD,CAdD,CADK,CAAP,CAiBA,GAAI3B,QAAJ,CAAc,CACZC,SAAS,CAAC,KAAD,CAAT,CACAE,UAAU,CAAC,IAAD,CAAV,CACD,CACF,CAED,GAAM0B,CAAAA,YAAY,CAAG/B,IAAI,CAACa,GAAL,CAAS,SAACC,QAAD,CAAc,CAC1C,mBACE,aAAoB,SAAS,CAAC,OAA9B,wBACE,KAAC,QAAD,EAAU,QAAQ,CAAEA,QAAQ,CAACA,QAA7B,EADF,cAEE,YAAK,SAAS,CAAC,mBAAf,UACGA,QAAQ,CAACC,MAAT,CAAgBF,GAAhB,CAAoB,SAACE,MAAD,qBACnB,KAAC,OAAD,EACE,SAAS,CAAEA,MAAM,CAACQ,SADpB,CAEE,OAAO,CAAET,QAAQ,CAACU,aAFpB,CAGE,MAAM,CAAET,MAAM,CAACO,MAHjB,CAIE,MAAM,CAAEP,MAAM,CAACK,KAJjB,CAME,IAAI,CAAE,sBAAMO,CAAAA,UAAU,CAACZ,MAAM,CAACM,EAAR,CAAhB,EANR,EAKON,MAAM,CAACM,EALd,CADmB,EAApB,CADH,EAFF,GAAU7B,MAAM,EAAhB,CADF,CAiBD,CAlBoB,CAArB,CAoBAG,OAAO,CAACC,GAAR,CAAYI,IAAZ,EACA,mBACE,aAAK,SAAS,CAAC,KAAf,WACK,CAACF,SAAD,cAAa,KAAC,KAAD,EAAO,SAAS,CAAE2B,SAAlB,EAAb,cAA+C,YAAK,SAAS,CAAC,WAAf,UAA6BM,YAA7B,EADpD,cAEE,aAAK,SAAS,CAAC,aAAf,WACG7B,QAAQ,eACP,mCACaF,IAAI,CAACA,IAAI,CAACgC,MAAL,CAAc,CAAf,CAAJ,CAAsBF,YADnC,KACkD9B,IAAI,CAACgC,MADvD,sBAFJ,CAOGlC,SAAS,eACR,eAAQ,SAAS,CAAC,eAAlB,CAAkC,OAAO,CAAE8B,YAA3C,UACG1B,QAAQ,CAAG,YAAH,CAAkB,eAD7B,EARJ,GAFF,cAeE,KAAC,OAAD,IAfF,GADF,CAmBD,CAED,cAAeR,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\n\nfunction App() {\n  console.log(\"rendered\");\n  const [startGame, setStartGame] = React.useState(false);\n  const [quiz, setQuiz] = React.useState([]);\n  const [answered, setAnswer] = React.useState(false);\n  const [reStart, setReStart] = React.useState(false);\n\n  React.useEffect(() => {\n    setReStart(false);\n    async function getQuiz() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=8\");\n      const data = await res.json();\n      setQuiz(\n        data.results.map((question) => {\n          let answer = [...question.incorrect_answers, question.correct_answer];\n          answer.sort();\n          return {\n            question: question.question\n              .replace(/&quot;/g, '\"')\n              .replace(/&#039;/g, \"'\"),\n            answer: answer.map((answer) => {\n              return {\n                value: answer.replace(/&quot;/g, '\"').replace(/&#039;/g, '\"'),\n                id: nanoid(),\n                isHeld: false,\n                triggered: false,\n              };\n            }),\n            correctAnswer: question.correct_answer,\n          };\n        })\n      );\n    }\n    getQuiz();\n  }, [reStart]);\n\n  function startQuiz() {\n    setStartGame((prevStartGame) => !prevStartGame);\n  }\n\n  function holdAnswer(id) {\n  if (!answered) {   \n      setQuiz(\n        quiz.map((question) => {\n          return {\n            question: question.question,\n            answer: question.answer.map((answer) => {\n              return answer.id === id\n                ? { ...answer, isHeld: !answer.isHeld }\n                : answer;\n            }),\n            correctAnswer: question.correctAnswer,\n          };\n        })\n      );}\n  }\n\n  function checkAnswers() {\n    setAnswer(true);\n    let count = 0;\n    setQuiz(\n      quiz.map((question) => {\n        return {\n          question: question.question,\n          answer: question.answer.map((answer) => {\n            answer.isHeld && answer.value === question.correctAnswer\n              ? count++\n              : (count = count);\n            return answer.isHeld && answer.value === question.correctAnswer\n              ? { ...answer, triggered: true }\n              : { ...answer, triggered: true };\n          }),\n          correctAnswer: question.correctAnswer,\n          totalCorrect: count,\n        };\n      })\n    );\n    if (answered) {\n      setAnswer(false);\n      setReStart(true);\n    }\n  }\n\n  const allQuestions = quiz.map((question) => {\n    return (\n      <div key={nanoid()} className=\"board\">\n        <Question question={question.question} />\n        <div className=\"answers-container\">\n          {question.answer.map((answer) => (\n            <Answers\n              triggered={answer.triggered}\n              correct={question.correctAnswer}\n              isHeld={answer.isHeld}\n              answer={answer.value}\n              key={answer.id}\n              hold={() => holdAnswer(answer.id)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  });\n\n  console.log(quiz);\n  return (\n    <div className=\"App\">\n        {!startGame ? <Start startQuiz={startQuiz} /> : <div className=\"fullBoard\" >{allQuestions}</div>}\n      <div className=\"button-play\">\n        {answered && (\n          <h3>\n            You score {quiz[quiz.length - 1].totalCorrect}/{quiz.length} correct\n            answers\n          </h3>\n        )}\n        {startGame && (\n          <button className=\"check-answers\" onClick={checkAnswers}>\n            {answered ? \"Play again\" : \"Check answers\"}\n          </button>\n        )}\n      </div>\n      <Bubbles />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}