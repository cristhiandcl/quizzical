{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  console.log('rendered');\n  const [startGame, setStartGame] = React.useState(false);\n  const [quiz, setQuiz] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuiz() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuiz(data.results.map(question => {\n        return {\n          question: question.question,\n          answer: [...question.incorrect_answers, question.correct_answer]\n        };\n      }));\n    }\n\n    getQuiz();\n  }, []);\n  console.log(answer);\n\n  function startQuiz() {\n    setStartGame(prevStartGame => !prevStartGame);\n  }\n\n  const allQuestions = quiz.map(question => {\n    const allAnswers = [...question.incorrect_answers, question.correct_answer];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: question.question\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: allAnswers.map(answer => {\n          newAnswer = /*#__PURE__*/_jsxDEV(Answers, {\n            answer: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!startGame ? /*#__PURE__*/_jsxDEV(Start, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this) : allQuestions, startGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-answers\",\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Bubbles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AK4CGDMQGDylULFZ5/Bze7NjCKQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/App.js"],"names":["React","Start","Question","Bubbles","nanoid","Answers","App","console","log","startGame","setStartGame","useState","quiz","setQuiz","useEffect","getQuiz","res","fetch","data","json","results","map","question","answer","incorrect_answers","correct_answer","startQuiz","prevStartGame","allQuestions","allAnswers","newAnswer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEbC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACW,QAAN,CAAe,EAAf,CAAxB;AAEAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,mBAAeC,OAAf,GAAyB;AACvB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAN,MAAAA,OAAO,CAAEK,IAAI,CAACE,OAAN,CAAeC,GAAf,CAAmBC,QAAQ,IACjC;AACE,eAAO;AAACA,UAAAA,QAAQ,EAACA,QAAQ,CAACA,QAAnB;AAA6BC,UAAAA,MAAM,EAAC,CAAC,GAAGD,QAAQ,CAACE,iBAAb,EAAgCF,QAAQ,CAACG,cAAzC;AAApC,SAAP;AACD,OAHK,CAAD,CAAP;AAID;;AACDV,IAAAA,OAAO;AACR,GAVD,EAUG,EAVH;AAYAR,EAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;;AAEA,WAASG,SAAT,GAAqB;AACnBhB,IAAAA,YAAY,CAACiB,aAAa,IAAI,CAACA,aAAnB,CAAZ;AACD;;AAED,QAAMC,YAAY,GAAGhB,IAAI,CAACS,GAAL,CAASC,QAAQ,IAAI;AACxC,UAAMO,UAAU,GAAG,CAAC,GAAGP,QAAQ,CAACE,iBAAb,EAAgCF,QAAQ,CAACG,cAAzC,CAAnB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE,QAAC,QAAD;AAAyB,QAAA,QAAQ,EAAEH,QAAQ,CAACA;AAA5C,SAAelB,MAAM,EAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACGyB,UAAU,CAACR,GAAX,CAAeE,MAAM,IAAI;AACxBO,UAAAA,SAAS,gBACT,QAAC,OAAD;AAAS,YAAA,MAAM,EAAEP;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADA;AAED,SAHA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUA,GAZmB,CAArB;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACG,CAACd,SAAD,gBAAa,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEiB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAb,GAA+CE,YADlD,EAEGnB,SAAS,iBAAI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7CQH,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\n\nfunction App() {\n\n  console.log('rendered')\n  const [startGame, setStartGame] = React.useState(false);\n  const [quiz, setQuiz] = React.useState([]);\n\n  React.useEffect(() => {\n    async function getQuiz() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuiz((data.results).map(question => \n        {\n          return {question:question.question, answer:[...question.incorrect_answers, question.correct_answer]}\n        }));\n    }\n    getQuiz();\n  }, []);\n\n  console.log(answer)\n\n  function startQuiz() {\n    setStartGame(prevStartGame => !prevStartGame)\n  }\n\n  const allQuestions = quiz.map(question => {\n    const allAnswers = [...question.incorrect_answers, question.correct_answer]\n    return (\n        <div className=\"board\">\n          <Question key={nanoid()} question={question.question}/>\n          <div className=\"answers-container\">\n            {allAnswers.map(answer => {\n              newAnswer = \n              <Answers answer={answer}/>\n            })}\n          </div>\n        </div>\n  )})\n\n  return (\n    <div className=\"App\">\n      {!startGame ? <Start startQuiz={startQuiz} /> : allQuestions}\n      {startGame && <button className=\"check-answers\">Check answers</button>}\n      <Bubbles />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}