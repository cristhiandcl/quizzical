{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"nanoid\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const [isHeld, setIsHeld] = React.useState(false);\n  const styles = {\n    backgroundColor: isHeld ? \"#59E391\" : \"white\"\n  };\n  const answers = [...props.incorrect_answers, props.correct_answer];\n  let questionTranslated = props.question;\n  questionTranslated = questionTranslated.replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\");\n\n  function answerAction(event) {\n    setIsHeld();\n    console.log(event);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question-header\",\n      children: questionTranslated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      style: styles,\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"par-div\",\n        id: nanoid(),\n        onClick: answerAction,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"individual-answer\",\n          children: answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"l4rNKFMCpZy/FnVt+diSs5zE1kc=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/Question.js"],"names":["nanoid","React","Question","props","isHeld","setIsHeld","useState","styles","backgroundColor","answers","incorrect_answers","correct_answer","questionTranslated","question","replace","answerAction","event","console","log","map","answer"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAA5B;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,eAAe,EAAEJ,MAAM,GAAG,SAAH,GAAe;AADzB,GAAf;AAGA,QAAMK,OAAO,GAAG,CAAC,GAAGN,KAAK,CAACO,iBAAV,EAA6BP,KAAK,CAACQ,cAAnC,CAAhB;AACA,MAAIC,kBAAkB,GAAGT,KAAK,CAACU,QAA/B;AACAD,EAAAA,kBAAkB,GAAGA,kBAAkB,CACpCE,OADkB,CACV,YADU,EACI,GADJ,EAElBA,OAFkB,CAEV,QAFU,EAEA,GAFA,CAArB;;AAIA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BX,IAAAA,SAAS;AACTY,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA,gBAAgCJ;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAEL,MAA/B;AAAA,gBACGE,OAAO,CAACU,GAAR,CAAaC,MAAD,iBACX;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,EAAE,EAAEpB,MAAM,EAAnC;AAAuC,QAAA,OAAO,EAAEe,YAAhD;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,oBACGK,MAAM,CAACN,OAAP,CAAe,QAAf,EAAyB,GAAzB,EAA8BA,OAA9B,CAAsC,OAAtC,EAA+C,EAA/C;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7BuBZ,Q;;KAAAA,Q","sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport React from \"react\";\r\n\r\nexport default function Question(props) {\r\n  const [isHeld, setIsHeld] = React.useState(false)\r\n  const styles = {\r\n    backgroundColor: isHeld ? \"#59E391\" : \"white\",\r\n  };\r\n  const answers = [...props.incorrect_answers, props.correct_answer];\r\n  let questionTranslated = props.question;\r\n  questionTranslated = questionTranslated\r\n    .replace(/(&quot\\;)/g, '\"')\r\n    .replace(\"&#039;\", \"'\");\r\n\r\n  function answerAction(event) {\r\n    setIsHeld()\r\n    console.log(event);\r\n  }\r\n  return (\r\n    <div className=\"questions-table\">\r\n      <p className=\"question-header\">{questionTranslated}</p>\r\n      <div className=\"answer\" style={styles}>\r\n        {answers.map((answer) => (\r\n          <div className=\"par-div\" id={nanoid()} onClick={answerAction}>\r\n            <p className=\"individual-answer\">\r\n              {answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}