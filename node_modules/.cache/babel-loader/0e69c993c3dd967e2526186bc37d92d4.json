{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  console.log('rendered');\n  const [startGame, setStartGame] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  const [answer, setAnswer] = React.useState([]);\n  const [allQuestions, setAllQuestions] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n\n    getQuestion();\n  }, []);\n\n  function startQuiz() {\n    // setStartGame((prevStartGame) => !prevStartGame);\n    setStartGame(!startGame);\n  }\n\n  function holdAnswer(id) {\n    setAnswer(answer.map(answer => {\n      return answer.id === id ? { ...answer,\n        isHeld: !answer.isHeld\n      } : answer;\n    }));\n    console.log(id);\n  }\n\n  React.useEffect(() => {\n    setAllQuestions(questions.map(ques => {\n      let questionTranslated = ques.question.replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\").replace(\"&eacute;\", \"e\");\n      let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer];\n      setAnswer(answersWithoutId.map(answer => {\n        return {\n          value: answer,\n          id: nanoid(),\n          isHeld: false\n        };\n      }));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: questionTranslated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers-container\",\n          onClick: props.hold,\n          children: answer.map(answer => /*#__PURE__*/_jsxDEV(Answers, {\n            isHeld: answer.isHeld,\n            answer: answer.value.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\"),\n            hold: () => holdAnswer(answer.id)\n          }, answer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }));\n  }, []); // console.log(allQuestions)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!startGame ? /*#__PURE__*/_jsxDEV(Start, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this) : allQuestions, startGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-answers\",\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Bubbles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UuvE4/sVdijdN0R4/Wn+Akf0VIE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/App.js"],"names":["React","Start","Question","Bubbles","nanoid","Answers","App","console","log","startGame","setStartGame","useState","questions","setQuestions","answer","setAnswer","allQuestions","setAllQuestions","useEffect","getQuestion","res","fetch","data","json","results","startQuiz","holdAnswer","id","map","isHeld","ques","questionTranslated","question","replace","answersWithoutId","incorrect_answers","correct_answer","value","props","hold"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\n\nfunction App() {\n\n  console.log('rendered')\n  const [startGame, setStartGame] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  const [answer, setAnswer] = React.useState([]);\n  const [allQuestions, setAllQuestions] = React.useState([])\n\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n    getQuestion();\n  }, []);\n\n  function startQuiz() {\n    // setStartGame((prevStartGame) => !prevStartGame);\n    setStartGame(!startGame)\n  }\n  \n  function holdAnswer(id) {\n    setAnswer(\n      answer.map((answer) => {\n        return answer.id === id\n          ? { ...answer, isHeld: !answer.isHeld }\n          : answer;\n      })\n    );\n    console.log(id);\n  }\n\n  React.useEffect(() => {\n    setAllQuestions(questions.map((ques) => {\n      let questionTranslated = ques.question\n        .replace(/(&quot\\;)/g, '\"')\n        .replace(\"&#039;\", \"'\")\n        .replace(\"&eacute;\", \"e\");\n      let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer];\n        setAnswer(\n          answersWithoutId.map((answer) => {\n            return { value: answer, id: nanoid(), isHeld: false };\n          })\n        );\n      return (\n        <>\n          <Question question={questionTranslated} />\n          <div className=\"answers-container\"  onClick={props.hold}>\n            {answer.map((answer) => (\n              <Answers\n                isHeld={answer.isHeld}\n                answer={answer.value.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")}\n                key={answer.id}\n                hold={() => holdAnswer(answer.id)}\n              />\n            ))}\n          </div>\n        </>\n      );\n    }));\n  }, []) \n\n  // console.log(allQuestions)\n  return (\n    <div className=\"App\">\n      {!startGame ? <Start startQuiz={startQuiz} /> : allQuestions}\n      {startGame && <button className=\"check-answers\">Check answers</button>}\n      <Bubbles />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}