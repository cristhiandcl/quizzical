{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let startGame = false;\n  const [questions, setQuestions] = React.useState([]);\n  const [isHeld, setIsHeld] = React.useState(false);\n  const [answer, setAnswer] = React.useState([]); // let answers = [];\n\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results.question);\n      setAnswer(data.results.answer);\n    }\n\n    getQuestion();\n  }, []);\n\n  function startQuiz() {\n    // setStartGame((prevStartGame) => !prevStartGame);\n    startGame = !startGame;\n  } // function holdAnswer(id) {\n  //   setAnswer(\n  //     answer.map((answer) => {\n  //       return answer.id === id\n  //         ? { ...answer, isHeld: !answer.isHeld }\n  //         : answer;\n  //     })\n  //   );\n  //   console.log(answer);\n  // }\n\n\n  const allQuestions = questions.map(ques => {\n    let questionTranslated = ques.question.replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\").replace(\"&eacute;\", \"e\");\n    let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer];\n    setAnswer(answersWithoutId.map(answer => {\n      return {\n        value: answer,\n        id: nanoid(),\n        isHeld: false\n      };\n    }));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: questionTranslated\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: answer.map(answer => /*#__PURE__*/_jsxDEV(Answers, {\n          isHeld: answer.isHeld,\n          answer: answer.value.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\"),\n          hold: () => holdAnswer(answer.id)\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!startGame ? /*#__PURE__*/_jsxDEV(Start, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this) : allQuestions, startGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-answers\",\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Bubbles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EyhzKkJt0YJWbUUZ482k2TLA6Is=\");\n\n_c = App;\nexport default App; // const allQuestions = questions.map((ques) => {\n//   let questionTranslated = ques.question\n//     .replace(/(&quot\\;)/g, '\"')\n//     .replace(\"&#039;\", \"'\")\n//     .replace(\"&eacute;\", \"e\");\n//   let answers = [...ques.incorrect_answers, ques.correct_answer]\n//   return (\n//     <>\n//     <Question question={questionTranslated} key={nanoid()} />\n//     <div className=\"answers-container\">\n//     {answers.map(answer => <Answers answer={answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")} key={nanoid()} />)}\n//     </div>\n//     </>\n//   )\n// });\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/App.js"],"names":["React","Start","Question","Bubbles","nanoid","Answers","App","startGame","questions","setQuestions","useState","isHeld","setIsHeld","answer","setAnswer","useEffect","getQuestion","res","fetch","data","json","results","question","startQuiz","allQuestions","map","ques","questionTranslated","replace","answersWithoutId","incorrect_answers","correct_answer","value","id","holdAnswer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\n\nfunction App() {\n  let startGame = false;\n  const [questions, setQuestions] = React.useState([]);\n  const [isHeld, setIsHeld] = React.useState(false);\n  const [answer, setAnswer] = React.useState([]);\n  // let answers = [];\n\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results.question);\n      setAnswer(data.results.answer)\n    }\n    getQuestion();\n  }, []);\n\n  function startQuiz() {\n    // setStartGame((prevStartGame) => !prevStartGame);\n    startGame = !startGame\n  }\n\n  // function holdAnswer(id) {\n  //   setAnswer(\n  //     answer.map((answer) => {\n  //       return answer.id === id\n  //         ? { ...answer, isHeld: !answer.isHeld }\n  //         : answer;\n  //     })\n  //   );\n  //   console.log(answer);\n  // }\n\n  const allQuestions = questions.map((ques) => {\n    let questionTranslated = ques.question\n      .replace(/(&quot\\;)/g, '\"')\n      .replace(\"&#039;\", \"'\")\n      .replace(\"&eacute;\", \"e\");\n    let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer];\n    setAnswer(\n      answersWithoutId.map((answer) => {\n        return { value: answer, id: nanoid(), isHeld: false };\n      })\n    );\n    return (\n      <>\n        <Question question={questionTranslated} key={nanoid()} />\n        <div className=\"answers-container\">\n          {answer.map((answer) => (\n            <Answers\n              isHeld={answer.isHeld}\n              answer={answer.value.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")}\n              key={answer.id}\n              hold={() => holdAnswer(answer.id)}\n            />\n          ))}\n        </div>\n      </>\n    );\n  });\n\n  return (\n    <div className=\"App\">\n      {!startGame ? <Start startQuiz={startQuiz} /> : allQuestions}\n      {startGame && <button className=\"check-answers\">Check answers</button>}\n      <Bubbles />\n    </div>\n  );\n}\n\nexport default App;\n\n// const allQuestions = questions.map((ques) => {\n//   let questionTranslated = ques.question\n//     .replace(/(&quot\\;)/g, '\"')\n//     .replace(\"&#039;\", \"'\")\n//     .replace(\"&eacute;\", \"e\");\n//   let answers = [...ques.incorrect_answers, ques.correct_answer]\n//   return (\n//     <>\n//     <Question question={questionTranslated} key={nanoid()} />\n//     <div className=\"answers-container\">\n//     {answers.map(answer => <Answers answer={answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")} key={nanoid()} />)}\n//     </div>\n//     </>\n//   )\n// });\n"]},"metadata":{},"sourceType":"module"}