{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\nimport { flushSync } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  console.log('rendered');\n  const [startGame, setStartGame] = React.useState(false);\n  const [quiz, setQuiz] = React.useState([]);\n  const [answered, setAnswer] = React.useState(false);\n  const [reStart, setReStart] = React.useState(false);\n  React.useEffect(() => {\n    async function getQuiz() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuiz(data.results.map(question => {\n        let answer = [...question.incorrect_answers, question.correct_answer];\n        answer.sort();\n        return {\n          question: question.question.replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\"),\n          answer: answer.map(answer => {\n            return {\n              value: answer.replace(/&quot;/g, '\"').replace(/&#039;/g, '\"'),\n              id: nanoid(),\n              isHeld: false,\n              triggered: false\n            };\n          }),\n          correctAnswer: question.correct_answer\n        };\n      }));\n    }\n\n    getQuiz();\n  }, [reS]);\n  console.log(quiz);\n\n  function startQuiz() {\n    setStartGame(prevStartGame => !prevStartGame);\n  }\n\n  function holdAnswer(id) {\n    setQuiz(quiz.map(question => {\n      return {\n        question: question.question,\n        answer: question.answer.map(answer => {\n          return answer.id === id ? { ...answer,\n            isHeld: !answer.isHeld\n          } : answer;\n        }),\n        correctAnswer: question.correctAnswer\n      };\n    }));\n  }\n\n  function checkAnswers() {\n    setAnswer(true);\n    let count = 0;\n    setQuiz(quiz.map(question => {\n      return {\n        question: question.question,\n        answer: question.answer.map(answer => {\n          answer.isHeld && answer.value === question.correctAnswer ? count++ : count = count;\n          return answer.isHeld && answer.value === question.correctAnswer ? { ...answer,\n            triggered: true\n          } : { ...answer,\n            triggered: true\n          };\n        }),\n        correctAnswer: question.correctAnswer,\n        totalCorrect: count\n      };\n    }));\n\n    if (answered) {\n      setAnswer(false);\n    }\n  }\n\n  const allQuestions = quiz.map(question => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: question.question\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: question.answer.map(answer => /*#__PURE__*/_jsxDEV(Answers, {\n          triggered: answer.triggered,\n          correct: question.correctAnswer,\n          isHeld: answer.isHeld,\n          answer: answer.value,\n          hold: () => holdAnswer(answer.id)\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!startGame ? /*#__PURE__*/_jsxDEV(Start, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this) : allQuestions, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-play\",\n      children: [answered && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"You score \", quiz[0].totalCorrect, \"/\", quiz[0].answer.length, \" correct answers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this), startGame && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-answers\",\n        onClick: checkAnswers,\n        children: answered ? \"Play again\" : \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bubbles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TQL/Dm+oINQO3Y9SL8CkYI1EISU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/App.js"],"names":["React","Start","Question","Bubbles","nanoid","Answers","flushSync","App","console","log","startGame","setStartGame","useState","quiz","setQuiz","answered","setAnswer","reStart","setReStart","useEffect","getQuiz","res","fetch","data","json","results","map","question","answer","incorrect_answers","correct_answer","sort","replace","value","id","isHeld","triggered","correctAnswer","reS","startQuiz","prevStartGame","holdAnswer","checkAnswers","count","totalCorrect","allQuestions","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\nimport { flushSync } from \"react-dom\";\n\nfunction App() {\n\n  console.log('rendered')\n  const [startGame, setStartGame] = React.useState(false);\n  const [quiz, setQuiz] = React.useState([]);\n  const [answered, setAnswer] = React.useState(false);\n  const [reStart, setReStart] = React.useState(false)\n\n  React.useEffect(() => {\n    async function getQuiz() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuiz((data.results).map(question => \n        {\n          let answer = [...question.incorrect_answers, question.correct_answer]\n          answer.sort()\n          return {question:(question.question).replace(/&quot;/g, '\"').replace(/&#039;/g, \"'\"), \n                  answer:answer.map(answer => {\n                    return {value: answer.replace(/&quot;/g, '\"').replace(/&#039;/g, '\"'),\n                            id:nanoid(),\n                            isHeld: false,\n                            triggered: false}\n                  }), correctAnswer: question.correct_answer}\n        }));\n    }\n    getQuiz();\n  }, [reS]);\n\n  console.log(quiz)\n\n  function startQuiz() {\n    setStartGame(prevStartGame => !prevStartGame)\n  }\n\n  function holdAnswer(id) {\n    setQuiz(quiz.map(question => \n      {\n        return {question:question.question, \n                answer: (question.answer).map(answer => {\n                  return answer.id === id ? {...answer,\n                          isHeld: !answer.isHeld} : answer\n                }), correctAnswer: question.correctAnswer}\n      }));\n  }\n\n  function checkAnswers() {\n    setAnswer(true)\n    let count = 0\n    setQuiz(quiz.map(question => \n      {\n        return {question:question.question, \n                answer: (question.answer).map(answer => {\n                  answer.isHeld && answer.value === question.correctAnswer ? count++ : count=count\n                  return answer.isHeld && answer.value === question.correctAnswer ? {...answer,\n                          triggered: true} : {...answer,\n                                              triggered: true}\n                }), correctAnswer: question.correctAnswer,\n                  totalCorrect: count}\n      }));\n    if (answered) {\n        setAnswer(false)\n    }\n  }\n\n  const allQuestions = quiz.map(question => {\n    return (\n        <div className=\"board\">\n          <Question key={nanoid()} question={question.question}/>\n          <div className=\"answers-container\">\n            {(question.answer).map(answer => <Answers triggered={answer.triggered} correct={question.correctAnswer} isHeld={answer.isHeld} answer={answer.value} key={answer.id} hold={() => holdAnswer(answer.id)}/>)}\n          </div>\n        </div>\n  )})\n\n  return (\n    <div className=\"App\">\n      {!startGame ? <Start startQuiz={startQuiz} /> : allQuestions}\n      <div className=\"button-play\">\n      {answered && <h3>You score {quiz[0].totalCorrect}/{quiz[0].answer.length} correct answers</h3>}\n      {startGame && <button className=\"check-answers\" onClick={checkAnswers} >{answered ? \"Play again\" : \"Check answers\"}</button>}\n      </div>\n      <Bubbles />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}