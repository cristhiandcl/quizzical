{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\Question.js\";\nimport { nanoid } from \"nanoid\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  const styles = {\n    backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\n  };\n  const answers = [...props.incorrect_answers, props.correct_answer];\n  let questionTranslated = props.question;\n  questionTranslated = questionTranslated.replace(/(&quot\\;)/g, \"\\\"\").replace(\"&#039;\", \"'\");\n\n  function answerAction() {\n    console.log(\"pressed\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question-header\",\n      children: questionTranslated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      style: styles,\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"par-div\",\n        id: nanoid(),\n        onClick: answerAction,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"individual-answer\",\n          children: answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/Question.js"],"names":["nanoid","React","Question","props","styles","backgroundColor","isHeld","answers","incorrect_answers","correct_answer","questionTranslated","question","replace","answerAction","console","log","map","answer"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,MAAM,GAAG;AACTC,IAAAA,eAAe,EAAEF,KAAK,CAACG,MAAN,GAAe,SAAf,GAA2B;AADnC,GAAf;AAGA,QAAMC,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACK,iBAAV,EAA6BL,KAAK,CAACM,cAAnC,CAAhB;AACA,MAAIC,kBAAkB,GAAGP,KAAK,CAACQ,QAA/B;AACAD,EAAAA,kBAAkB,GAAGA,kBAAkB,CAACE,OAAnB,CAA2B,YAA3B,EAAwC,IAAxC,EAA8CA,OAA9C,CAAsD,QAAtD,EAA+D,GAA/D,CAArB;;AAEA,WAASC,YAAT,GAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA,gBAAgCL;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAEN,MAA/B;AAAA,gBACGG,OAAO,CAACS,GAAR,CAAaC,MAAD,iBACX;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,EAAE,EAAEjB,MAAM,EAAnC;AAAuC,QAAA,OAAO,EAAEa,YAAhD;AAAA,+BACA;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,oBAAkCI,MAAM,CAACL,OAAP,CAAe,QAAf,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,OAArC,EAA8C,EAA9C;AAAlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;KAvBuBV,Q","sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport React from \"react\";\r\n\r\nexport default function Question(props) {\r\n  const styles = {\r\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\r\n    }\r\n  const answers = [...props.incorrect_answers, props.correct_answer];\r\n  let questionTranslated = props.question\r\n  questionTranslated = questionTranslated.replace(/(&quot\\;)/g,\"\\\"\").replace(\"&#039;\",\"'\")\r\n\r\n  function answerAction() {\r\n      console.log(\"pressed\")\r\n  }\r\n  return (\r\n    <div className=\"questions-table\">\r\n      <p className=\"question-header\">{questionTranslated}</p>\r\n      <div className=\"answer\" style={styles}>\r\n        {answers.map((answer) => (\r\n          <div className=\"par-div\" id={nanoid()} onClick={answerAction}>\r\n          <p className=\"individual-answer\">{answer.replace(\"&#039;\",\"s\").replace(\"&lrm;\", \"\")}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}