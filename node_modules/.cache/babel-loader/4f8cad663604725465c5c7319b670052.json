{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\Question.js\";\nimport { nanoid } from \"nanoid\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  const answer = [props.incorrect_answers, props.correct_answer];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: answer.map(answer => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/Question.js"],"names":["nanoid","React","Question","props","answer","incorrect_answers","correct_answer","question","map"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEpC,QAAMC,MAAM,GAAG,CAACD,KAAK,CAACE,iBAAP,EAA0BF,KAAK,CAACG,cAAhC,CAAf;AACF,sBACE;AAAA,4BACE;AAAA,gBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGH,MAAM,CAACI,GAAP,CAAYJ,MAAD,iBACV;AAAA,kBAAmBA;AAAnB,SAAQJ,MAAM,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD;KAbuBE,Q","sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport React from \"react\";\r\n\r\nexport default function Question(props) {\r\n\r\n    const answer = [props.incorrect_answers, props.correct_answer]\r\n  return (\r\n    <>\r\n      <h2>{props.question}</h2>\r\n      <div className=\"question\">\r\n        {answer.map((answer) => (\r\n          <p key={nanoid()}>{answer}</p>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}