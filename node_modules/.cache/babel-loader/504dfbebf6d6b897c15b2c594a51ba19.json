{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [startGame, setStartGame] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n\n    getQuestion();\n  }, []);\n\n  function startQuiz() {\n    setStartGame(prevStartGame => !prevStartGame);\n  }\n\n  const allQuestions = questions.map(ques => {\n    let questionTranslated = ques.question;\n    questionTranslated = questionTranslated.replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\").replace(\"&eacute;\", \"e\");\n    return /*#__PURE__*/_jsxDEV(Question, {\n      question: ques.question\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  });\n  console.log(allQuestions) // questionTranslated = questionTranslated\n  .replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\").replace(\"&eacute;\", \"e\"); // props.answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!startGame ? /*#__PURE__*/_jsxDEV(Start, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this) : allQuestions, startGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-answers\",\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Bubbles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OCqXp9lgBBaidhDKEXrOif5xPHo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/App.js"],"names":["React","Start","Question","Bubbles","nanoid","Answers","App","startGame","setStartGame","useState","questions","setQuestions","useEffect","getQuestion","res","fetch","data","json","results","startQuiz","prevStartGame","allQuestions","map","ques","questionTranslated","question","replace","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAlC;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,mBAAeC,WAAf,GAA6B;AAC3B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAN,MAAAA,YAAY,CAACK,IAAI,CAACE,OAAN,CAAZ;AACD;;AACDL,IAAAA,WAAW;AACZ,GAPD,EAOG,EAPH;;AASA,WAASM,SAAT,GAAqB;AACnBX,IAAAA,YAAY,CAAEY,aAAD,IAAmB,CAACA,aAArB,CAAZ;AACD;;AAED,QAAMC,YAAY,GAAGX,SAAS,CAACY,GAAV,CAAeC,IAAD,IAAU;AAC3C,QAAIC,kBAAkB,GAAGD,IAAI,CAACE,QAA9B;AACAD,IAAAA,kBAAkB,GAAGA,kBAAkB,CAACE,OAAnB,CAA2B,YAA3B,EAAyC,GAAzC,EAA8CA,OAA9C,CAAsD,QAAtD,EAAgE,GAAhE,EAClBA,OADkB,CACV,UADU,EACE,GADF,CAArB;AAEA,wBAAO,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,IAAI,CAACE;AAAzB,OAAwCrB,MAAM,EAA9C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GALoB,CAArB;AAOAuB,EAAAA,OAAO,CACJC,GADH,CACOP,YADP,EAEE;AAFF,GAGGK,OAHH,CAGW,YAHX,EAGyB,GAHzB,EAIGA,OAJH,CAIW,QAJX,EAIqB,GAJrB,EAKGA,OALH,CAKW,UALX,EAKuB,GALvB,EAxBa,CA8Bb;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACG,CAACnB,SAAD,gBAAa,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEY;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAb,GAA+CE,YADlD,EAEGd,SAAS,iBAAI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvCQD,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\n\nfunction App() {\n  const [startGame, setStartGame] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n    getQuestion();\n  }, []);\n\n  function startQuiz() {\n    setStartGame((prevStartGame) => !prevStartGame);\n  }\n\n  const allQuestions = questions.map((ques) => {\n    let questionTranslated = ques.question\n    questionTranslated = questionTranslated.replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\")\n      .replace(\"&eacute;\", \"e\");\n    return <Question question={ques.question} key={nanoid()} />;\n  });\n\n  console\n    .log(allQuestions)\n    // questionTranslated = questionTranslated\n    .replace(/(&quot\\;)/g, '\"')\n    .replace(\"&#039;\", \"'\")\n    .replace(\"&eacute;\", \"e\");\n  // props.answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")\n\n  return (\n    <div className=\"App\">\n      {!startGame ? <Start startQuiz={startQuiz} /> : allQuestions}\n      {startGame && <button className=\"check-answers\">Check answers</button>}\n      <Bubbles />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}