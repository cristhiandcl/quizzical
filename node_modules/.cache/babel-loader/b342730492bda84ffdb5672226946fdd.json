{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\quizzical\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [startGame, setStartGame] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  const [isHeld, setIsHeld] = React.useState(false);\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n\n    getQuestion();\n  }, []);\n  setQuestions(questions.map(ques => {\n    let questionTranslated = ques.question.replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\").replace(\"&eacute;\", \"e\");\n    let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer];\n    let answers = answersWithoutId.map(answer => {\n      return {\n        value: answer,\n        id: nanoid(),\n        isHeld: isHeld\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: questionTranslated\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: answers.map(answer => /*#__PURE__*/_jsxDEV(Answers, {\n          isHeld: answer.isHeld,\n          answer: answer.value.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\"),\n          hold: () => holdAnswer(answer.id)\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }));\n\n  function startQuiz() {\n    setStartGame(prevStartGame => !prevStartGame);\n  }\n\n  function holdAnswer(id) {\n    console.log(id);\n  }\n\n  const allQuestions = questions.map(ques => {\n    let questionTranslated = ques.question.replace(/(&quot\\;)/g, '\"').replace(\"&#039;\", \"'\").replace(\"&eacute;\", \"e\");\n    let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer];\n    let answers = answersWithoutId.map(answer => {\n      return {\n        value: answer,\n        id: nanoid(),\n        isHeld: isHeld\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: questionTranslated\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: answers.map(answer => /*#__PURE__*/_jsxDEV(Answers, {\n          isHeld: answer.isHeld,\n          answer: answer.value.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\"),\n          hold: () => holdAnswer(answer.id)\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!startGame ? /*#__PURE__*/_jsxDEV(Start, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this) : allQuestions, startGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-answers\",\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Bubbles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pGLV7C7l/DQqCnRRKD7VzBx4mIA=\");\n\n_c = App;\nexport default App; // const allQuestions = questions.map((ques) => {\n//   let questionTranslated = ques.question\n//     .replace(/(&quot\\;)/g, '\"')\n//     .replace(\"&#039;\", \"'\")\n//     .replace(\"&eacute;\", \"e\");\n//   let answers = [...ques.incorrect_answers, ques.correct_answer]\n//   return (\n//     <>\n//     <Question question={questionTranslated} key={nanoid()} />\n//     <div className=\"answers-container\">\n//     {answers.map(answer => <Answers answer={answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")} key={nanoid()} />)}\n//     </div>\n//     </>\n//   )\n// });\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/quizzical/src/App.js"],"names":["React","Start","Question","Bubbles","nanoid","Answers","App","startGame","setStartGame","useState","questions","setQuestions","isHeld","setIsHeld","useEffect","getQuestion","res","fetch","data","json","results","map","ques","questionTranslated","question","replace","answersWithoutId","incorrect_answers","correct_answer","answers","answer","value","id","holdAnswer","startQuiz","prevStartGame","console","log","allQuestions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Start\";\nimport Question from \"./Question\";\nimport Bubbles from \"./Bubbles\";\nimport { nanoid } from \"nanoid\";\nimport Answers from \"./Answers\";\n\nfunction App() {\n  const [startGame, setStartGame] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  const [isHeld, setIsHeld] = React.useState(false);\n\n  React.useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=4\");\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n    getQuestion();\n  }, []);\n\n  setQuestions(questions.map((ques) => {\n    let questionTranslated = ques.question\n      .replace(/(&quot\\;)/g, '\"')\n      .replace(\"&#039;\", \"'\")\n      .replace(\"&eacute;\", \"e\");\n    let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer]\n    let answers = answersWithoutId.map(answer => {\n      return {value: answer, \n              id: nanoid(),\n              isHeld: isHeld}})\n    return (\n      <>\n      <Question question={questionTranslated} key={nanoid()} />\n      <div className=\"answers-container\">\n      {answers.map(answer => <Answers isHeld={answer.isHeld} answer={(answer.value).replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")} key={answer.id} hold={() => holdAnswer(answer.id)}/>)}\n      </div>\n      </>\n    )\n  }));\n  \n  function startQuiz() {\n    setStartGame(prevStartGame => !prevStartGame);\n  }\n\n  function holdAnswer(id) {\n    console.log(id)\n    \n  }\n\n  const allQuestions = questions.map((ques) => {\n    let questionTranslated = ques.question\n      .replace(/(&quot\\;)/g, '\"')\n      .replace(\"&#039;\", \"'\")\n      .replace(\"&eacute;\", \"e\");\n    let answersWithoutId = [...ques.incorrect_answers, ques.correct_answer]\n    let answers = answersWithoutId.map(answer => {\n      return {value: answer, \n              id: nanoid(),\n              isHeld: isHeld}})\n    return (\n      <>\n      <Question question={questionTranslated} key={nanoid()} />\n      <div className=\"answers-container\">\n      {answers.map(answer => <Answers isHeld={answer.isHeld} answer={(answer.value).replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")} key={answer.id} hold={() => holdAnswer(answer.id)}/>)}\n      </div>\n      </>\n    )\n  });\n\n  return (\n    <div className=\"App\">\n      {!startGame ? <Start startQuiz={startQuiz} /> : allQuestions}\n      {startGame && <button className=\"check-answers\">Check answers</button>}\n      <Bubbles />\n    </div>\n  );\n}\n\nexport default App;\n\n\n// const allQuestions = questions.map((ques) => {\n//   let questionTranslated = ques.question\n//     .replace(/(&quot\\;)/g, '\"')\n//     .replace(\"&#039;\", \"'\")\n//     .replace(\"&eacute;\", \"e\");\n//   let answers = [...ques.incorrect_answers, ques.correct_answer]\n//   return (\n//     <>\n//     <Question question={questionTranslated} key={nanoid()} />\n//     <div className=\"answers-container\">\n//     {answers.map(answer => <Answers answer={answer.replace(\"&#039;\", \"s\").replace(\"&lrm;\", \"\")} key={nanoid()} />)}\n//     </div>\n//     </>\n//   )\n// });"]},"metadata":{},"sourceType":"module"}